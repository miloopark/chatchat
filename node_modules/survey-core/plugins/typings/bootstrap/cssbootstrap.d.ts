export declare var defaultCss: {
    root: string;
    container: string;
    header: string;
    body: string;
    bodyEmpty: string;
    footer: string;
    title: string;
    description: string;
    logo: string;
    logoImage: string;
    headerText: string;
    navigationButton: string;
    completedPage: string;
    navigation: {
        complete: string;
        prev: string;
        next: string;
        start: string;
        preview: string;
        edit: string;
    };
    progress: string;
    progressBar: string;
    progressTextUnderBar: string;
    progressTextInBar: string;
    progressButtonsContainerCenter: string;
    progressButtonsContainer: string;
    progressButtonsImageButtonLeft: string;
    progressButtonsImageButtonRight: string;
    progressButtonsImageButtonHidden: string;
    progressButtonsListContainer: string;
    progressButtonsList: string;
    progressButtonsListElementPassed: string;
    progressButtonsListElementCurrent: string;
    progressButtonsListElementNonClickable: string;
    progressButtonsPageTitle: string;
    progressButtonsPageDescription: string;
    page: {
        root: string;
        title: string;
        description: string;
    };
    pageTitle: string;
    pageDescription: string;
    row: string;
    question: {
        mainRoot: string;
        flowRoot: string;
        header: string;
        headerLeft: string;
        content: string;
        contentLeft: string;
        titleLeftRoot: string;
        title: string;
        titleExpandable: string;
        titleExpanded: string;
        titleCollapsed: string;
        number: string;
        description: string;
        descriptionUnderInput: string;
        requiredText: string;
        comment: string;
        required: string;
        titleRequired: string;
        hasError: string;
        indent: number;
        formGroup: string;
        disabled: string;
    };
    panel: {
        title: string;
        titleExpandable: string;
        titleExpanded: string;
        titleCollapsed: string;
        titleOnError: string;
        icon: string;
        iconExpanded: string;
        description: string;
        container: string;
        footer: string;
        number: string;
        requiredText: string;
    };
    error: {
        root: string;
        icon: string;
        item: string;
        locationTop: string;
        locationBottom: string;
    };
    boolean: {
        root: string;
        rootRadio: string;
        item: string;
        control: string;
        controlCheckbox: string;
        itemChecked: string;
        itemIndeterminate: string;
        itemDisabled: string;
        switch: string;
        slider: string;
        label: string;
        disabledLabel: string;
        sliderGhost: string;
        materialDecorator: string;
        itemDecorator: string;
        checkedPath: string;
        uncheckedPath: string;
        indeterminatePath: string;
    };
    checkbox: {
        root: string;
        item: string;
        itemChecked: string;
        itemSelectAll: string;
        itemNone: string;
        itemInline: string;
        itemControl: string;
        itemDecorator: string;
        label: string;
        labelChecked: string;
        controlLabel: string;
        materialDecorator: string;
        other: string;
        column: string;
    };
    ranking: {
        root: string;
        rootMobileMod: string;
        rootDragMod: string;
        rootDisabled: string;
        rootDragHandleAreaIcon: string;
        rootSelectToRankMod: string;
        rootSelectToRankAlignVertical: string;
        rootSelectToRankAlignHorizontal: string;
        item: string;
        itemContent: string;
        itemIndex: string;
        itemIndexEmptyMode: string;
        controlLabel: string;
        itemGhostNode: string;
        itemIconContainer: string;
        itemIcon: string;
        itemIconHoverMod: string;
        itemIconFocusMod: string;
        itemGhostMod: string;
        itemDragMod: string;
        container: string;
        containerEmptyMode: string;
        containerFromMode: string;
        containerToMode: string;
        containerPlaceholder: string;
        containersDivider: string;
    };
    comment: string;
    dropdown: {
        root: string;
        popup: string;
        selectWrapper: string;
        control: string;
        controlValue: string;
        other: string;
        cleanButton: string;
        cleanButtonSvg: string;
        cleanButtonIconId: string;
        filterStringInput: string;
        hintPrefix: string;
        hintSuffix: string;
    };
    tagbox: {
        root: string;
        popup: string;
        selectWrapper: string;
        control: string;
        controlValue: string;
        other: string;
        cleanButton: string;
        cleanButtonSvg: string;
        cleanButtonIconId: string;
        filterStringInput: string;
    };
    html: {
        root: string;
    };
    image: {
        root: string;
        image: string;
    };
    matrix: {
        root: string;
        label: string;
        itemChecked: string;
        itemDecorator: string;
        cellText: string;
        cellTextSelected: string;
        cellLabel: string;
        cellResponsiveTitle: string;
    };
    matrixdropdown: {
        root: string;
        cell: string;
        headerCell: string;
        row: string;
        rowAdditional: string;
        detailRow: string;
        detailRowText: string;
        detailCell: string;
        detailButton: string;
        detailButtonExpanded: string;
        detailIcon: string;
        detailIconExpanded: string;
        detailPanelCell: string;
        actionsCell: string;
    };
    matrixdynamic: {
        root: string;
        button: string;
        buttonAdd: string;
        buttonRemove: string;
        iconAdd: string;
        iconRemove: string;
        iconDrag: string;
        headerCell: string;
        row: string;
        detailRow: string;
        detailCell: string;
        detailButton: string;
        detailButtonExpanded: string;
        detailIcon: string;
        detailIconExpanded: string;
        detailPanelCell: string;
        actionsCell: string;
        emptyRowsSection: string;
        emptyRowsText: string;
        emptyRowsButton: string;
        ghostRow: string;
    };
    paneldynamic: {
        root: string;
        navigation: string;
        progressTop: string;
        progressBottom: string;
        title: string;
        button: string;
        buttonAdd: string;
        buttonRemove: string;
        buttonRemoveRight: string;
        buttonPrev: string;
        buttonNext: string;
        buttonPrevDisabled: string;
        buttonNextDisabled: string;
        progressContainer: string;
        progress: string;
        progressBar: string;
        progressText: string;
        panelWrapper: string;
        panelWrapperInRow: string;
        footer: string;
        progressBtnIcon: string;
    };
    multipletext: {
        root: string;
        itemTitle: string;
        item: string;
        itemLabel: string;
        row: string;
        itemValue: string;
    };
    radiogroup: {
        root: string;
        item: string;
        itemChecked: string;
        itemInline: string;
        label: string;
        labelChecked: string;
        itemControl: string;
        itemDecorator: string;
        controlLabel: string;
        materialDecorator: string;
        other: string;
        clearButton: string;
        column: string;
    };
    buttongroup: {
        root: string;
        item: string;
        itemIcon: string;
        itemDecorator: string;
        itemCaption: string;
        itemHover: string;
        itemSelected: string;
        itemDisabled: string;
        itemControl: string;
    };
    imagepicker: {
        root: string;
        item: string;
        itemChecked: string;
        itemInline: string;
        label: string;
        itemControl: string;
        image: string;
        itemText: string;
        clearButton: string;
    };
    rating: {
        root: string;
        item: string;
        selected: string;
        minText: string;
        itemText: string;
        maxText: string;
        disabled: string;
    };
    text: string;
    expression: string;
    file: {
        root: string;
        placeholderInput: string;
        preview: string;
        removeButton: string;
        fileInput: string;
        removeFile: string;
        fileDecorator: string;
        fileSign: string;
        removeButtonBottom: string;
        dragAreaPlaceholder: string;
        fileList: string;
    };
    signaturepad: {
        root: string;
        controls: string;
        placeholder: string;
        canvas: string;
        backgroundImage: string;
        clearButton: string;
    };
    saveData: {
        root: string;
        info: string;
        error: string;
        success: string;
        button: string;
    };
    window: {
        root: string;
        body: string;
        header: {
            root: string;
            title: string;
            button: string;
            buttonExpanded: string;
            buttonCollapsed: string;
        };
    };
};
