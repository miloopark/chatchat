export declare var surveyCss: any;
export declare var defaultV2Css: {
    root: string;
    rootMobile: string;
    rootAnimationDisabled: string;
    rootReadOnly: string;
    rootCompact: string;
    rootFitToContainer: string;
    rootWrapper: string;
    rootWrapperFixed: string;
    rootBackgroundImage: string;
    container: string;
    header: string;
    bodyContainer: string;
    body: string;
    bodyWithTimer: string;
    clockTimerRoot: string;
    clockTimerRootTop: string;
    clockTimerRootBottom: string;
    clockTimerProgress: string;
    clockTimerProgressAnimation: string;
    clockTimerTextContainer: string;
    clockTimerMinorText: string;
    clockTimerMajorText: string;
    bodyEmpty: string;
    bodyLoading: string;
    footer: string;
    title: string;
    description: string;
    logo: string;
    logoImage: string;
    headerText: string;
    headerClose: string;
    navigationButton: string;
    bodyNavigationButton: string;
    completedPage: string;
    completedBeforePage: string;
    timerRoot: string;
    navigation: {
        complete: string;
        prev: string;
        next: string;
        start: string;
        preview: string;
        edit: string;
    };
    panel: {
        contentFadeIn: string;
        contentFadeOut: string;
        fadeIn: string;
        fadeOut: string;
        asPage: string;
        number: string;
        title: string;
        titleExpandable: string;
        titleNumInline: string;
        titleExpanded: string;
        titleCollapsed: string;
        titleDisabled: string;
        titleOnExpand: string;
        titleOnError: string;
        titleBar: string;
        description: string;
        container: string;
        withFrame: string;
        content: string;
        icon: string;
        iconExpanded: string;
        footer: string;
        requiredText: string;
        header: string;
        collapsed: string;
        expanded: string;
        expandable: string;
        expandableAnimating: string;
        nested: string;
        invisible: string;
        navigationButton: string;
        compact: string;
        errorsContainer: string;
    };
    paneldynamic: {
        mainRoot: string;
        empty: string;
        root: string;
        iconRemove: string;
        navigation: string;
        title: string;
        header: string;
        headerTab: string;
        button: string;
        buttonRemove: string;
        buttonAdd: string;
        buttonPrev: string;
        buttonPrevDisabled: string;
        buttonNextDisabled: string;
        buttonNext: string;
        progressContainer: string;
        progress: string;
        progressBar: string;
        nested: string;
        progressText: string;
        separator: string;
        panelWrapper: string;
        footer: string;
        panelFooter: string;
        footerButtonsContainer: string;
        panelWrapperInRow: string;
        progressBtnIcon: string;
        noEntriesPlaceholder: string;
        compact: string;
        tabsRoot: string;
        tabsLeft: string;
        tabsRight: string;
        tabsCenter: string;
        tabs: {
            item: string;
            itemPressed: string;
            itemAsIcon: string;
            itemIcon: string;
            itemTitle: string;
        };
    };
    progress: string;
    progressTop: string;
    progressBottom: string;
    progressBar: string;
    progressText: string;
    progressButtonsRoot: string;
    progressButtonsNumbered: string;
    progressButtonsFitSurveyWidth: string;
    progressButtonsContainerCenter: string;
    progressButtonsContainer: string;
    progressButtonsConnector: string;
    progressButtonsButton: string;
    progressButtonsButtonBackground: string;
    progressButtonsButtonContent: string;
    progressButtonsHeader: string;
    progressButtonsFooter: string;
    progressButtonsImageButtonLeft: string;
    progressButtonsImageButtonRight: string;
    progressButtonsImageButtonHidden: string;
    progressButtonsListContainer: string;
    progressButtonsList: string;
    progressButtonsListElementPassed: string;
    progressButtonsListElementCurrent: string;
    progressButtonsListElementNonClickable: string;
    progressButtonsPageTitle: string;
    progressButtonsPageDescription: string;
    progressTextInBar: string;
    page: {
        root: string;
        emptyHeaderRoot: string;
        title: string;
        description: string;
        errorsContainer: string;
    };
    pageTitle: string;
    pageDescription: string;
    row: string;
    rowMultiple: string;
    rowCompact: string;
    rowFadeIn: string;
    rowFadeOut: string;
    pageRow: string;
    question: {
        contentFadeIn: string;
        contentFadeOut: string;
        fadeIn: string;
        fadeOut: string;
        mainRoot: string;
        flowRoot: string;
        withFrame: string;
        asCell: string;
        answered: string;
        header: string;
        headerLeft: string;
        headerTop: string;
        headerBottom: string;
        content: string;
        contentSupportContainerQueries: string;
        contentLeft: string;
        titleNumInline: string;
        titleLeftRoot: string;
        titleTopRoot: string;
        descriptionUnderInputRoot: string;
        titleBottomRoot: string;
        titleOnAnswer: string;
        titleEmpty: string;
        titleOnError: string;
        title: string;
        titleExpandable: string;
        titleExpanded: string;
        titleCollapsed: string;
        titleDisabled: string;
        titleBar: string;
        requiredText: string;
        number: string;
        description: string;
        descriptionUnderInput: string;
        comment: string;
        other: string;
        required: string;
        titleRequired: string;
        indent: number;
        footer: string;
        commentArea: string;
        formGroup: string;
        hasError: string;
        hasErrorTop: string;
        hasErrorBottom: string;
        collapsed: string;
        expandable: string;
        expandableAnimating: string;
        expanded: string;
        nested: string;
        invisible: string;
        composite: string;
        disabled: string;
        errorsContainer: string;
        errorsContainerTop: string;
        errorsContainerBottom: string;
    };
    image: {
        mainRoot: string;
        root: string;
        image: string;
        adaptive: string;
        noImage: string;
        noImageSvgIconId: string;
        withFrame: string;
    };
    html: {
        mainRoot: string;
        root: string;
        withFrame: string;
        nested: string;
    };
    error: {
        root: string;
        icon: string;
        item: string;
        locationTop: string;
        locationBottom: string;
    };
    checkbox: {
        root: string;
        rootMobile: string;
        rootRow: string;
        rootMultiColumn: string;
        item: string;
        itemOnError: string;
        itemSelectAll: string;
        itemNone: string;
        itemDisabled: string;
        itemChecked: string;
        itemHover: string;
        itemInline: string;
        label: string;
        labelChecked: string;
        itemControl: string;
        itemDecorator: string;
        itemSvgIconId: string;
        controlLabel: string;
        materialDecorator: string;
        other: string;
        column: string;
    };
    radiogroup: {
        root: string;
        rootMobile: string;
        rootRow: string;
        rootMultiColumn: string;
        item: string;
        itemOnError: string;
        itemInline: string;
        label: string;
        labelChecked: string;
        itemDisabled: string;
        itemChecked: string;
        itemHover: string;
        itemControl: string;
        itemDecorator: string;
        controlLabel: string;
        materialDecorator: string;
        other: string;
        clearButton: string;
        column: string;
    };
    boolean: {
        mainRoot: string;
        root: string;
        rootRadio: string;
        item: string;
        itemOnError: string;
        control: string;
        itemChecked: string;
        itemExchanged: string;
        itemIndeterminate: string;
        itemDisabled: string;
        itemHover: string;
        label: string;
        labelTrue: string;
        labelFalse: string;
        switch: string;
        disabledLabel: string;
        sliderText: string;
        slider: string;
        sliderGhost: string;
        radioItem: string;
        radioItemChecked: string;
        radioLabel: string;
        radioControlLabel: string;
        radioFieldset: string;
        itemRadioDecorator: string;
        materialRadioDecorator: string;
        itemRadioControl: string;
        rootCheckbox: string;
        checkboxItem: string;
        checkboxLabel: string;
        checkboxItemOnError: string;
        checkboxItemIndeterminate: string;
        checkboxItemChecked: string;
        checkboxItemDecorator: string;
        checkboxItemDisabled: string;
        controlCheckbox: string;
        checkboxMaterialDecorator: string;
        checkboxControlLabel: string;
        svgIconCheckedId: string;
    };
    text: {
        root: string;
        small: string;
        controlDisabled: string;
        constrolWithCharacterCounter: string;
        characterCounterBig: string;
        content: string;
        remainingCharacterCounter: string;
        onError: string;
    };
    multipletext: {
        root: string;
        rootMobile: string;
        itemLabel: string;
        itemLabelOnError: string;
        itemLabelAllowFocus: string;
        itemLabelAnswered: string;
        itemWithCharacterCounter: string;
        item: string;
        itemTitle: string;
        content: string;
        row: string;
        cell: string;
        cellError: string;
        cellErrorTop: string;
        cellErrorBottom: string;
    };
    dropdown: {
        root: string;
        popup: string;
        small: string;
        selectWrapper: string;
        other: string;
        onError: string;
        label: string;
        item: string;
        itemDisabled: string;
        itemChecked: string;
        itemHover: string;
        itemControl: string;
        itemDecorator: string;
        cleanButton: string;
        cleanButtonSvg: string;
        cleanButtonIconId: string;
        chevronButton: string;
        chevronButtonSvg: string;
        chevronButtonIconId: string;
        control: string;
        controlInputFieldComponent: string;
        controlValue: string;
        controlDisabled: string;
        controlEmpty: string;
        controlLabel: string;
        filterStringInput: string;
        materialDecorator: string;
        hintPrefix: string;
        hintSuffix: string;
    };
    imagepicker: {
        mainRoot: string;
        root: string;
        rootColumn: string;
        item: string;
        itemOnError: string;
        itemInline: string;
        itemChecked: string;
        itemDisabled: string;
        itemHover: string;
        label: string;
        itemDecorator: string;
        imageContainer: string;
        itemControl: string;
        image: string;
        itemText: string;
        other: string;
        itemNoImage: string;
        itemNoImageSvgIcon: string;
        itemNoImageSvgIconId: string;
        column: string;
        checkedItemDecorator: string;
        checkedItemSvgIcon: string;
        checkedItemSvgIconId: string;
    };
    matrix: {
        mainRoot: string;
        tableWrapper: string;
        root: string;
        columnsAutoWidth: string;
        noHeader: string;
        rootVerticalAlignTop: string;
        rootVerticalAlignMiddle: string;
        rootAlternateRows: string;
        rowError: string;
        cell: string;
        row: string;
        rowDisabled: string;
        headerCell: string;
        rowTextCell: string;
        label: string;
        itemOnError: string;
        itemValue: string;
        itemChecked: string;
        itemDisabled: string;
        itemHover: string;
        materialDecorator: string;
        itemDecorator: string;
        cellText: string;
        cellTextSelected: string;
        cellTextDisabled: string;
        cellResponsiveTitle: string;
        compact: string;
    };
    matrixdropdown: {
        mainRoot: string;
        rootScroll: string;
        root: string;
        columnsAutoWidth: string;
        noHeader: string;
        hasFooter: string;
        rootVerticalAlignTop: string;
        rootVerticalAlignMiddle: string;
        tableWrapper: string;
        rootAlternateRows: string;
        cell: string;
        errorsCell: string;
        errorsCellTop: string;
        errorsCellBottom: string;
        itemCell: string;
        row: string;
        expandedRow: string;
        rowHasPanel: string;
        rowHasEndActions: string;
        headerCell: string;
        rowTextCell: string;
        footerCell: string;
        footerTotalCell: string;
        columnTitleCell: string;
        cellRequiredText: string;
        detailButton: string;
        detailButtonExpanded: string;
        detailIcon: string;
        detailIconExpanded: string;
        detailIconId: string;
        detailIconExpandedId: string;
        detailPanelCell: string;
        detailRowCell: string;
        actionsCellPrefix: string;
        actionsCell: string;
        actionsCellDrag: string;
        emptyCell: string;
        verticalCell: string;
        cellQuestionWrapper: string;
        compact: string;
    };
    matrixdynamic: {
        mainRoot: string;
        rootScroll: string;
        empty: string;
        root: string;
        columnsAutoWidth: string;
        noHeader: string;
        hasFooter: string;
        tableWrapper: string;
        rootAlternateRows: string;
        content: string;
        cell: string;
        row: string;
        rowHasPanel: string;
        rowHasEndActions: string;
        expandedRow: string;
        itemCell: string;
        headerCell: string;
        rowTextCell: string;
        footerCell: string;
        columnTitleCell: string;
        cellRequiredText: string;
        button: string;
        detailRow: string;
        detailButton: string;
        detailButtonExpanded: string;
        detailIcon: string;
        detailIconExpanded: string;
        detailIconId: string;
        detailIconExpandedId: string;
        detailPanelCell: string;
        detailRowCell: string;
        actionsCellPrefix: string;
        actionsCell: string;
        actionsCellDrag: string;
        buttonAdd: string;
        buttonRemove: string;
        iconAdd: string;
        iconRemove: string;
        dragElementDecorator: string;
        iconDragElement: string;
        footer: string;
        emptyRowsSection: string;
        iconDrag: string;
        ghostRow: string;
        emptyCell: string;
        verticalCell: string;
        cellQuestionWrapper: string;
        errorsCell: string;
        errorsCellTop: string;
        errorsCellBottom: string;
        compact: string;
    };
    rating: {
        rootDropdown: string;
        root: string;
        rootWrappable: string;
        rootLabelsTop: string;
        rootLabelsBottom: string;
        rootLabelsDiagonal: string;
        item: string;
        itemOnError: string;
        itemHover: string;
        selected: string;
        itemStar: string;
        itemStarOnError: string;
        itemStarHover: string;
        itemStarSelected: string;
        itemStarDisabled: string;
        itemStarHighlighted: string;
        itemStarUnhighlighted: string;
        itemStarSmall: string;
        itemSmiley: string;
        itemSmileyOnError: string;
        itemSmileyHover: string;
        itemSmileySelected: string;
        itemSmileyDisabled: string;
        itemSmileyHighlighted: string;
        itemSmileyScaleColored: string;
        itemSmileyRateColored: string;
        itemSmileySmall: string;
        minText: string;
        itemText: string;
        maxText: string;
        itemDisabled: string;
        itemFixedSize: string;
        control: string;
        itemSmall: string;
        selectWrapper: string;
        controlValue: string;
        controlDisabled: string;
        controlEmpty: string;
        filterStringInput: string;
        chevronButton: string;
        chevronButtonSvg: string;
        chevronButtonIconId: string;
        popup: string;
        onError: string;
    };
    comment: {
        root: string;
        small: string;
        controlDisabled: string;
        content: string;
        remainingCharacterCounter: string;
        onError: string;
    };
    expression: string;
    file: {
        root: string;
        rootDragging: string;
        rootAnswered: string;
        other: string;
        placeholderInput: string;
        preview: string;
        fileSign: string;
        fileList: string;
        fileSignBottom: string;
        dragArea: string;
        dragAreaActive: string;
        fileDecorator: string;
        onError: string;
        fileDecoratorDrag: string;
        fileInput: string;
        noFileChosen: string;
        chooseFile: string;
        chooseFileAsText: string;
        chooseFileAsTextDisabled: string;
        chooseFileAsIcon: string;
        chooseFileIconId: string;
        disabled: string;
        controlDisabled: string;
        removeButton: string;
        removeButtonBottom: string;
        removeButtonIconId: string;
        removeFile: string;
        removeFileSvg: string;
        removeFileSvgIconId: string;
        wrapper: string;
        defaultImage: string;
        defaultImageIconId: string;
        leftIconId: string;
        rightIconId: string;
        removeFileButton: string;
        dragAreaPlaceholder: string;
        imageWrapper: string;
        imageWrapperDefaultImage: string;
        single: string;
        singleImage: string;
        mobile: string;
        videoContainer: string;
        contextButton: string;
        video: string;
        actionsContainer: string;
        closeCameraButton: string;
        changeCameraButton: string;
        takePictureButton: string;
        loadingIndicator: string;
    };
    signaturepad: {
        mainRoot: string;
        root: string;
        small: string;
        controls: string;
        placeholder: string;
        canvas: string;
        backgroundImage: string;
        clearButton: string;
        clearButtonIconId: string;
        loadingIndicator: string;
    };
    saveData: {
        root: string;
        rootWithButtons: string;
        info: string;
        error: string;
        success: string;
        button: string;
        shown: string;
    };
    window: {
        root: string;
        rootCollapsedMod: string;
        rootFullScreenMode: string;
        rootContent: string;
        body: string;
        header: {
            root: string;
            titleCollapsed: string;
            buttonsContainer: string;
            button: string;
            buttonExpanded: string;
            buttonCollapsed: string;
            collapseButton: string;
            closeButton: string;
            fullScreenButton: string;
        };
    };
    ranking: {
        root: string;
        rootMobileMod: string;
        rootDragMod: string;
        rootDisabled: string;
        rootDesignMode: string;
        rootDragHandleAreaIcon: string;
        rootSelectToRankMod: string;
        rootSelectToRankAlignVertical: string;
        rootSelectToRankAlignHorizontal: string;
        item: string;
        itemContent: string;
        itemIndex: string;
        itemIndexEmptyMode: string;
        itemDisabled: string;
        controlLabel: string;
        itemGhostNode: string;
        itemIconContainer: string;
        itemIcon: string;
        itemIconHoverMod: string;
        itemIconFocusMod: string;
        itemGhostMod: string;
        itemDragMod: string;
        itemOnError: string;
        container: string;
        containerEmptyMode: string;
        containerFromMode: string;
        containerToMode: string;
        containerPlaceholder: string;
        containersDivider: string;
    };
    buttongroup: {
        root: string;
        item: string;
        itemIcon: string;
        itemDecorator: string;
        itemCaption: string;
        itemHover: string;
        itemSelected: string;
        itemDisabled: string;
        itemControl: string;
    };
    list: {
        root: string;
        item: string;
        itemBody: string;
        itemSelected: string;
        itemFocused: string;
    };
    actionBar: {
        root: string;
        item: string;
        defaultSizeMode: string;
        smallSizeMode: string;
        itemPressed: string;
        itemAsIcon: string;
        itemIcon: string;
        itemTitle: string;
    };
    variables: {
        mobileWidth: string;
        themeMark: string;
    };
    tagbox: {
        root: string;
        popup: string;
        small: string;
        selectWrapper: string;
        other: string;
        onError: string;
        label: string;
        itemSvgIconId: string;
        item: string;
        itemDisabled: string;
        itemChecked: string;
        itemHover: string;
        itemControl: string;
        itemDecorator: string;
        cleanButton: string;
        cleanButtonSvg: string;
        cleanButtonIconId: string;
        cleanItemButton: string;
        cleanItemButtonSvg: string;
        cleanItemButtonIconId: string;
        chevronButton: string;
        chevronButtonSvg: string;
        chevronButtonIconId: string;
        control: string;
        controlValue: string;
        controlValueItems: string;
        placeholderInput: string;
        controlDisabled: string;
        controlEmpty: string;
        controlLabel: string;
        filterStringInput: string;
        materialDecorator: string;
        hint: string;
        hintPrefix: string;
        hintSuffix: string;
        hintSuffixWrapper: string;
    };
};
export declare const defaultV2ThemeName = "defaultV2";
