import { IAction } from "./actions/action";
import { DropdownListModel } from "./dropdownListModel";
import { ItemValue } from "./itemvalue";
import { MultiSelectListModel } from "./multiSelectListModel";
import { Question } from "./question";
export declare class DropdownMultiSelectListModel extends DropdownListModel {
    protected popupCssClasses: string;
    filterStringPlaceholder: string;
    closeOnSelect: boolean;
    locStrsChanged(): void;
    private updateListState;
    private syncFilterStringPlaceholder;
    private getSelectedActions;
    protected getFocusFirstInputSelector(): string;
    protected createListModel(): MultiSelectListModel<ItemValue>;
    protected resetFilterString(): void;
    previousValue: any;
    doneButtonCaption: string;
    private get shouldResetAfterCancel();
    protected createPopup(): void;
    selectAllItems(): void;
    selectNoneItem(): void;
    selectItem(id: string): void;
    deselectItem(id: string): void;
    clear(): void;
    onClear(event: any): void;
    setHideSelectedItems(newValue: boolean): void;
    removeLastSelectedItem(): void;
    constructor(question: Question, onSelectionChanged?: (item: IAction, ...params: any[]) => void);
    inputKeyHandler(event: any): void;
    setInputStringFromSelectedItem(newValue: any): void;
    protected focusItemOnClickAndPopup(): void;
    protected onEscape(): void;
    protected beforeScrollToFocusedItem(focusedItem: ItemValue): void;
    protected afterScrollToFocusedItem(): void;
    protected onPropertyChangedHandler(sender: any, options: any): void;
}
